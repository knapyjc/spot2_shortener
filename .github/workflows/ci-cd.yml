name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: shorturl_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, bcmath, mysql, curl, xml, zip

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env for testing
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Configure .env database
        run: |
          php -r "file_put_contents('.env', str_replace(
            ['DB_HOST=127.0.0.1','DB_DATABASE=homestead','DB_USERNAME=homestead','DB_PASSWORD=secret'],
            ['DB_HOST=127.0.0.1','DB_DATABASE=shorturl_test','DB_USERNAME=user','DB_PASSWORD=password'],
            file_get_contents('.env')
          ));"

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test --verbose

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/shorturl
            git pull origin main
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl reload nginx
